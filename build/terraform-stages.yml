stages:
- stage: build
  displayName: 'package scripts'
  pool:
    vmImage: ubuntu-latest

  jobs:
  - template: terraform-build.yml
    parameters:
      environment: 'dev'

- stage: tf_plan_dev
  displayName: 'terraform plan - dev'
  dependsOn: build
  pool:
    vmImage: ubuntu-latest
  variables:
  - name: artifact_name
    value: dev_tfplan
  - name: network_security_group_name
    value: 'aznsg-dev-zn-titansoft'
  - name: resource_group_name
    value: 'azrg-dev-zn-vnet'
  - name: tags_environment
    value: 'Development'
  - name: virtual_network_name
    value: 'azvnet-dev-zn-titansoft'
  - name: workspace_name
    value: 'azure_vnet-dev'
  condition: succeeded('build')

  jobs:
  - template: terraform-plan-dev.yml

- stage: tf_apply_dev
  displayName: 'terraform apply - dev'
  dependsOn: tf_plan_dev
  pool:
    vmImage: ubuntu-latest
  variables:
  - name: artifact_name
    value: dev_tfplan
  condition: succeeded('tf_plan_dev')

  jobs:
  - template: terraform-apply-dev.yml
    parameters:
      environment: 'prod'

- stage: tf_plan_prd
  displayName: 'terraform plan - prod'
  dependsOn: tf_apply_dev
  pool:
    vmImage: ubuntu-latest
  variables:
  - name: artifact_name
    value: prd_tfplan
  - name: network_security_group_name
    value: 'aznsg-prd-zn-titansoft'
  - name: resource_group_name
    value: 'azrg-prd-zn-vnet'
  - name: tags_environment
    value: 'Production'
  - name: virtual_network_name
    value: 'azvnet-prd-zn-titansoft'
  - name: workspace_name
    value: 'azure_vnet-prd'
  condition: succeeded('tf_apply_dev')

  jobs:
  - template: terraform-plan-prd.yml
    parameters:
      environment: 'prod'

- stage: tf_apply_prd
  displayName: 'terraform apply - prod'
  dependsOn: tf_plan_prd
  pool:
    vmImage: ubuntu-latest
  variables:
  - name: artifact_name
    value: prd_tfplan
  condition: succeeded('tf_plan_prd')

  jobs:
  - template: terraform-apply-prd.yml
